; This configuration file was generated through combining the following files:
; data/config.ini
; data/default_config.ini

[TOP-LEVEL PARAMETERS]
simulation_mode = INTRINSIC_SENSITIVITY

[FITNESS PARAMETERS]
fitness_func = PULSE_COUNT
desired_freq = 30000
combined_mode = MULT
pulse_weight = 2
var_weight = 0
num_samples = 1
num_passes = 1

[FITNESS SENSITIVITY PARAMETERS]
test_circuit = data/sensitvity_seeds/4_20_24_30k.asc
sensitivity_trials = IGNORE
sensitivity_time = 007:00:00:00
reading_temp_humidity = true
environment_usb_path = /dev/ttyUSB0

[LOGGING PARAMETERS]
log_level = 4
save_log = true
save_plots = true
backup_workspace = true
log_file = ./workspace/log
plots_dir = ./workspace/plots
output_dir = ./prev_workspaces
asc_dir = ./workspace/experiment_asc
bin_dir = ./workspace/experiment_bin
data_dir = ./workspace/experiment_data
analysis = ./workspace/analysis
best_file = ./workspace/best.asc
src_populations_dir = ./workspace/source_populations
monitor_file = /home/ubuntu/BitstreamEvolution/data/monitor
generations_dir = ./workspace/generations
datetime_format = %%m/%%d/%%Y - %%H:%%M:%%S
show_ovr_best = true

[SYSTEM PARAMETERS]
fpga = i:0x0403:0x6010:0
usb_path = /dev/ttyUSB1
auto_upload_to_arduino = false

[HARDWARE PARAMETERS]
routing = MOORE
mcu_read_timeout = 1.5
serial_baud = 115200
accessed_columns = 14,15,24,25,40,41
configurable_io = false
input_pins = 45,47,48
output_pins = 44

[GA PARAMETERS]
population_size = 50
mutation_probability = 0.0021
crossover_probability = 0.7
elitism_fraction = 0.1
; Options:	SINGLE_ELITE (top individual is an elite)
;			FRAC_ELITE (uses the elitism_fraction to determine number of elites)
;			CLASSIC_TOURN (runs a classic tournament)
;			FIT_PROP_SEL (fitness-proportional selection)
;			RANK_PROP_SEL (rank-proportional selection)
;			MAP_ELITES (MAP-elites inspired method, maps waveforms to a grid and copies/mutates the best in each cell for the next generation) - not defined for SIM_HARDWARE or PULSE measurement
selection = FIT_PROP_SEL
; Options:	HAMMING_DIST (uses the average Hamming distance as the diversity measure)
;			UNIQUE (uses the count of unique individuals as the diversity measure)
diversity_measure = HAMMING_DIST
random_injection = 0.0

[INITIALIZATION PARAMETERS]
; Options:	CLONE_SEED (clones the seed hardware to every individual in the population) - not defined for FULLY_SIM
;			CLONE_SEED_MUTATE (clones the seed hardware to every indvidual, and then mutates each of them) - not defined for FULLY_SIM
;			RANDOM (completely randomizes the [modifiable] bitstream of all individuals)
;			EXISTING_POPULATION (uses the existing population as-is) - not defined for FULLY_SIM
init_mode = CLONE_SEED_MUTATE
; Options:	PULSE (until pulses detected)
;			VARIANCE (until variance crosses certain threshold)
;			NO (no randomization, just begin evolution immediately)
randomize_until = NO
randomize_threshold = 4
; Options:	RANDOM (completely randomize every circuit until you get a desired fitness result)
;			MUTATE (mutate each circuit once until you get a desired fitness result)
; Note: Randomization goes through the population. Therefore, if doing MUTATE with CLONE_SEED and pop size = 50, for example,
; there will be 50 mutations of the original circuit, then each of those will be mutated (building off of the first mutation)
; until a desired result is seen
randomize_mode = RANDOM

[STOPPING CONDITION PARAMETERS]
; Can provide a value or IGNORE for generations & target_fitness
; If IGNORE is provided, will not take target fitness/# generations into account
; Will stop when it reaches one of these; whichever comes first
; If both are set to IGNORE, then evolution will run until the user forces it to stop
generations = 500
target_fitness = IGNORE

[TRANSFERABILITY PARAMETERS]
; Parameters for testing evolution across two different fpgas
transfer_interval = IGNORE
fpga2 = i:0x0403:0x6010:0
